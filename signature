void sign(mpz_t sig, mpz_t m, mpz_t d, mpz_t n)//sig=m^d (mod n)
{
	joye_ladder(sig,m,d,n);
	gmp_printf("signature = 0x%Zd\n", sig);
}

void verif_sign(mpz_t verif_sig, mpz_t m, mpz_t sig, mpz_t e, mpz_t n)//verif_sig = sig^e (mod n) = m
{
	joye_ladder(verif_sig,sig,e,n);
	if(mpz_cmp(verif_sig,m)==0)
	{
		gmp_printf("La signature est valide, on obtient verif_sig = 0x%Zd qui est égal à m\n",verif_sig);
	}
	else
	{
		printf("problème dans la vérification de signature\n");
		gmp_printf("verif_sig = 0x%Zd",verif_sig);
	}
}

//////////////////////////////////////////////// à rajouter dans le main/////////////////////////////////////////

	mpz_t n,e,d,m,m_obtenu,c,p,q,d_p,d_q,I_p,sig,verif_sig;
	gmp_randstate_t generateur;
	gmp_randinit_default(generateur);//initialisation du generateur
	gmp_randseed_ui(generateur,time(NULL));
	mpz_inits(n,e,d,m,m_obtenu,c,p,q,d_p,d_q,I_p,sig,verif_sig,NULL);
	mpz_set_ui(e,3);
	mpz_set_str(m,"23457843567",10);
	gmp_printf("m = 0x%Zx\n\n",m);
	generation_RSA_CRT(n,e,d_p,d_q,I_p,p,q,512);
	encrypt_rsa(c,m,e,n);
	decrypt_rsa_CRT(m_obtenu,c,d_p,d_q,I_p,p,q);
	est_egale(m,m_obtenu);
	/*generation_RSA(n,e,d,2048);
	mpz_set_str(m,"23457843567",10);
	gmp_printf("m = 0x%Zx\n\n",m);
	encrypt_rsa(c,m,e,n);
	decrypt_rsa(m_obtenu,c,d,n);
	est_egale(m,m_obtenu);*/

	sign(sig,m,d,n);
	verif_sign(verif_sig,m,sig,e,n);

	gmp_randclear(generateur);
	mpz_clears(n,e,d,m,m_obtenu,c,p,q,d_p,d_q,I_p,sig,verif_sig,NULL);


	return 0;
